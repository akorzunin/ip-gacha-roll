name: bot CI

on:
  push:
    tags:
      - bot-v*
    paths:
      - "src-bot/**"
      - ".github/workflows/ci.bot.yaml"

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/akorzunin/ip-gacha-roll-tg-bot
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src-bot/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    name: ðŸš€ Deploy
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Get short SHA
        id: vars
        run: echo "sha_short=sha-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy.yaml
          directory: src-bot/deploy
          configuration: |
            [defaults]
            callbacks_enabled = ansible.posix.profile_tasks, ansible.posix.timer
            stdout_callback = yaml
            interpreter_python = /usr/bin/python
            [ssh_connection]
            retries=5
          vault_password: ${{ secrets.ANSIBLE_PASS }}
          inventory: ${{ vars.ANSIBLE_HOSTS }}
          options: |
            --inventory .hosts
            --limit ${{ vars.SERVER_GROUP }}
            --verbose
            --extra-vars "
            PORT=${{ vars.PORT }}
            TELOXIDE_TOKEN=${{ secrets.TELOXIDE_TOKEN }}
            IMAGE_TAG=${{ steps.vars.outputs.sha_short }}
            ROUTER_PASS=${{ secrets.ROUTER_PASS }}
            AUTHORIZED_BOT_USERS=${{ vars.AUTHORIZED_BOT_USERS }}
            "
